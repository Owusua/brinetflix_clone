{"ast":null,"code":"import _regeneratorRuntime from\"/home/owusua/Music/briNet/netflix_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/owusua/Music/briNet/netflix_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/owusua/Music/briNet/netflix_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import axios from\"./axios\";import requests from\"./requests\";import\"./Banner.css\";function Banner(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movie=_useState2[0],setMovie=_useState2[1];/**responsible for whatever random movie selected at the top */useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(requests.fetchNetflixOriginals);case 2:request=_context.sent;/* gets us a random movie from the  fetchNetflixOriginals list of movies*/setMovie(request.data.results[Math.floor(Math.random()*request.data.results.length-1)]);case 4:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[]);/**Run once when the Banner component loads */console.log(movie);/**function to create ellipses when description text in header is truncated */function truncate(str,n){return(str===null||str===void 0?void 0:str.length)>n?str.substr(0,n-1)+\"...\":str;}return/*#__PURE__*/React.createElement(\"header\",{className:\"banner\",style:{backgroundSize:\"cover\",backgroundImage:\"url(\\\"https://image.tmdb.org/t/p/original/\".concat(movie===null||movie===void 0?void 0:movie.backdrop_path,\"\\\")\"),backgroundPosition:\"center center\"}},/*#__PURE__*/React.createElement(\"div\",{className:\"banner__contents\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"banner__title\"},(movie===null||movie===void 0?void 0:movie.title)||(movie===null||movie===void 0?void 0:movie.name)||(movie===null||movie===void 0?void 0:movie.original_name)),/*#__PURE__*/React.createElement(\"div\",{className:\"banner__buttons\"},/*#__PURE__*/React.createElement(\"button\",{className:\"banner__button\"},\"Play\"),/*#__PURE__*/React.createElement(\"button\",{className:\"banner__button\"},\"My List\")),/*#__PURE__*/React.createElement(\"h1\",{className:\"banner__description\"},truncate(movie===null||movie===void 0?void 0:movie.overview,150))),/*#__PURE__*/React.createElement(\"div\",{className:\"banner__fadebottom\"}));}export default Banner;","map":{"version":3,"sources":["/home/owusua/Music/briNet/netflix_clone/src/Banner.js"],"names":["React","useState","useEffect","axios","requests","Banner","movie","setMovie","fetchData","get","fetchNetflixOriginals","request","data","results","Math","floor","random","length","console","log","truncate","str","n","substr","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview"],"mappings":"udAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAO,cAAP,CAEA,QAASC,CAAAA,MAAT,EAAkB,eACUJ,QAAQ,CAChC,EADgC,CADlB,wCACTK,KADS,eACFC,QADE,eAGb,+DAEHL,SAAS,CAAC,UAAM,SACCM,CAAAA,SADD,qIACd,qKACwBL,CAAAA,KAAK,CAACM,GAAN,CAAUL,QAAQ,CAACM,qBAAnB,CADxB,QACQC,OADR,eAEE,0EACAJ,QAAQ,CACNI,OAAO,CAACC,IAAR,CAAaC,OAAb,CACEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBL,OAAO,CAACC,IAAR,CAAaC,OAAb,CAAqBI,MAArC,CAA8C,CAAzD,CADF,CADM,CAAR,CAHF,sDADc,4CAUdT,SAAS,GACV,CAXQ,CAWN,EAXM,CAAT,CAWQ,8CAERU,OAAO,CAACC,GAAR,CAAYb,KAAZ,EAEA,8EACA,QAASc,CAAAA,QAAT,CAAkBC,GAAlB,CAAuBC,CAAvB,CAA0B,CACxB,MAAO,CAAAD,GAAG,OAAH,EAAAA,GAAG,SAAH,QAAAA,GAAG,CAAEJ,MAAL,EAAcK,CAAd,CAAkBD,GAAG,CAACE,MAAJ,CAAW,CAAX,CAAcD,CAAC,CAAG,CAAlB,EAAuB,KAAzC,CAAiDD,GAAxD,CACD,CAED,mBACE,8BACE,SAAS,CAAC,QADZ,CAEE,KAAK,CAAE,CACLG,cAAc,CAAE,OADX,CAELC,eAAe,qDAA8CnB,KAA9C,SAA8CA,KAA9C,iBAA8CA,KAAK,CAAEoB,aAArD,OAFV,CAGLC,kBAAkB,CAAE,eAHf,CAFT,eAQE,2BAAK,SAAS,CAAC,kBAAf,eAGE,0BAAI,SAAS,CAAC,eAAd,EAGG,CAAArB,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEsB,KAAP,IAAgBtB,KAAhB,SAAgBA,KAAhB,iBAAgBA,KAAK,CAAEuB,IAAvB,IAA+BvB,KAA/B,SAA+BA,KAA/B,iBAA+BA,KAAK,CAAEwB,aAAtC,CAHH,CAHF,cASE,2BAAK,SAAS,CAAC,iBAAf,eACE,8BAAQ,SAAS,CAAC,gBAAlB,SADF,cAEE,8BAAQ,SAAS,CAAC,gBAAlB,YAFF,CATF,cAeE,0BAAI,SAAS,CAAC,qBAAd,EACGV,QAAQ,CAACd,KAAD,SAACA,KAAD,iBAACA,KAAK,CAAEyB,QAAR,CAAkB,GAAlB,CADX,CAfF,CARF,cA2BE,2BAAK,SAAS,CAAC,oBAAf,EA3BF,CADF,CA+BD,CAED,cAAe1B,CAAAA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport requests from \"./requests\";\nimport \"./Banner.css\";\n\nfunction Banner() {\n  const [movie, setMovie] = useState(\n    []\n  ); /**responsible for whatever random movie selected at the top */\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      /* gets us a random movie from the  fetchNetflixOriginals list of movies*/\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n    }\n    fetchData();\n  }, []); /**Run once when the Banner component loads */\n\n  console.log(movie);\n\n  /**function to create ellipses when description text in header is truncated */\n  function truncate(str, n) {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n        backgroundPosition: \"center center\",\n      }}\n    >\n      <div className=\"banner__contents\">\n        {/*we will give it a Background image */}\n        {/*title */}\n        <h1 className=\"banner__title\">\n          {/*so this is same as saying if movie.title does not exist, or if movie.name or if movie.original_name does not exist. Hence tthis helps to get rid of a long list of if statements */}\n          {/* the question mark is something new in react called \"optional chaining\" */}\n          {movie?.title || movie?.name || movie?.original_name}\n        </h1>\n        {/*div > 2 buttons */}\n        <div className=\"banner__buttons\">\n          <button className=\"banner__button\">Play</button>\n          <button className=\"banner__button\">My List</button>\n        </div>\n\n        {/*description */}\n        <h1 className=\"banner__description\">\n          {truncate(movie?.overview, 150)}\n        </h1>\n      </div>\n      <div className=\"banner__fadebottom\" />\n    </header>\n  );\n}\n\nexport default Banner;\n"]},"metadata":{},"sourceType":"module"}